name: Demo Projects
on:
  push:
    paths-ignore:
      - 'devel.etc/**'
  pull_request:
    paths-ignore:
      - 'devel.etc/**'
jobs:
  dist:
    name: Make distribution using Dist::Inkt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache ~/perl5
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-dist-locallib
          path: ~/perl5
      - name: Perl version
        run: |
          perl -v
      - name: Install cpanm
        run: |
          curl -L https://cpanmin.us | perl - --sudo App::cpanminus
      - name: Install local::lib
        run: |
          cpanm --local-lib=~/perl5 local::lib && eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
      - name: Install Dist::Inkt
        shell: bash
        run: |
          eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
          cpanm -n Dist::Inkt::Profile::TOBYINK
      - name: Make distribution
        shell: bash
        run: |
          eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
          ~/perl5/bin/distinkt-dist --TRAVIS --targetdir=build
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./
  build:
    name: ${{ matrix.demo }} (perl ${{ matrix.perl }} on ${{ matrix.os }})
    needs: dist
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest' ]
        perl: [ '5.10.1', '5.12', '5.34', '5.36' ]
        demo: [ 'Acme-Mitey-Cards', 'Bad-Example', 'Your-Project' ]
    steps:
      - name: Get dist artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
      - name: Set up perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: ${{ matrix.perl }}
          multi-thread: ${{ matrix.threaded }}
          distribution: ${{ ( ( matrix.os == 'strawberry') && 'strawberry' ) || 'default' }}
      - name: Perl version
        run: |
          perl -v
      - name: Install Mite dependencies
        run: |
          cpanm -n setenv Class::XSAccessor Perl::Tidy Test2::V0
          cpanm -n --installdeps ./build
      - name: Configure Mite
        working-directory: ./build/
        run: perl Makefile.PL
      - name: Make Mite
        working-directory: ./build/
        run: perl -MConfig -e'exec $Config{make}'
      - name: Run Mite test suite
        working-directory: ./build/
        run: prove -lr t
      - name: Compile ${{ matrix.demo }}
        run: perl -I../../build/lib ../../build/bin/mite compile
        working-directory: devel.examples/${{ matrix.demo }}
      - name: Run ${{ matrix.demo }} test suite
        run: prove -lr t
        working-directory: devel.examples/${{ matrix.demo }}
      - name: Run ${{ matrix.demo }} test suite in PP mode
        run: prove -Msetenv=MITE_PURE_PERL,1 -lr t
        working-directory: devel.examples/${{ matrix.demo }}
